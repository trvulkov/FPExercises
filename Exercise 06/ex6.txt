Упражнение 6:
Теория:
Още функции за работа със списъци:
1) (take xs n) - взима първите n елемента на списък
2) (drop xs n) - премахва първите n елемента на списък
3) (zip xs ys) - връща списък от двойки (Ai,Bi), където Ai е i-тия елемент на xs, Bi е i-тия елемент на ys

Функции от по-висок ред за работа със списъци:
1) (any? pred? xs) - проверява дали поне един елемент на списъка удовлетворява даден предикат
2) (all? pred? x) - проверява дали всеки елемент на списъка удовлетворява даден предикат
3) (map f xs) - прилага f към всеки елемент на xs
4) (filter p xs) - премахва (филтрира) елементите, за които предикатът p е грешен
5) (apply f xs) - връща оценката на f със аргументи - елементите на списъка 
6) foldl, foldr - обхождане на списък с последователно прилагане на f
7) (zipWith f xs ys) - връща списък с елементи функцията f приложена към елемент на xs и елемент на ys

Задачи:
Задача 1. Да се дефинира функция (insertAtPos n x xs), която добавя елемент на зададена позиция в списък.
Задача 2. Да се дефинира функция (removeFirst x xs), която изтрива първото срещане на даден елемент в списък.
Задача 3. Да се дефинира функция (removeAll x xs), която изтрива всички срещания на даден елемент на списък.
Задача 4. Функция (removeDuplicates xs), която премахва всички повторни срещания на елементи от списъка.
Задача 5. Функция (sublistBetween start end xs), която взима подсписъка на xs между позициите start и end.
Задача 6. Функция (countOcccurrences subxs xs), която връща броя срещания на subxs в xs.
	Насоки:
	1. функция, която проверява дали един списък е префикс на друг списък, т.е. дали вторият списък започва с първия
	2. функция за броене на срещанията
Задача 7. Функция (maxOrderedSublist xs), която връща най-дългия възходящо сортиран подсписък от списъка xs.
Задача 8. Функция (flatten xss), която приема списък от списъци (които също могат да са от списъци, т.е. имаме произволно ниво на вложение) и връша списък само от елементи, т.е. списък без вложени списъци
Nапример `((1 2 3) (4 5 6) ((7 8) (9 10 (11 (12)))))) трябва да стане `(1 2 3 4 5 6 7 8 9 10 11 12).

Асоциативен списък - списък от точкови двойки (<ключ> . <асоциация>)
Задачи:
Задача 9. Функция (assoc key a-list), която търси key в асоциативния списък a-list и връша първия му елемент с ключ равен на key.
Задача 10. Функция (replace lst dict), която връща като резултат списък, получен от lst, в който елементите са заменени с асоциацията им в dict.
